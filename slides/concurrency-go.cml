<title style="color_pair(Helper::Curses::ORANGE)">[ CONCURRENCY ]</title>

<body>
  <code>
    <line style="color_pair(Helper::Curses::ORANGE)">Similar Code in GO:</line>
    <line style="color_pair(Helper::Curses::LIGHT_GRAY)">func get_the_datas() {</line>
    <line style="color_pair(Helper::Curses::LIGHT_GRAY)"> for {</line>
    <line style="color_pair(Helper::Curses::DARK_GRAY)">    # some blocking IO</line>
    <line style="color_pair(Helper::Curses::LIGHT_GRAY)">  }</line>
    <line style="color_pair(Helper::Curses::LIGHT_GRAY)">}</line>
    <line style="color_pair(Helper::Curses::LIGHT_GRAY)">go get_the_datas()</line>
  </code>
</body>

<!--
  - Not really shorter, but stil better
  - The caller decides sync/async
  - `go` decides the best threading model to use
  - Can be used for CPU instensive work
-->
